// <auto-generated />
using System;
using Marketplace;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Marketplace.Migrations
{
    [DbContext(typeof(MarketplaceDbContext))]
    [Migration("20250827144530_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Marketplace.DataModels.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Chaussures"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sac / Hydratation"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Accessoires"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Combinaisons"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Vélos"
                        },
                        new
                        {
                            Id = 6,
                            Name = "High-tech"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Matériel trail"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Nutrition"
                        });
                });

            modelBuilder.Entity("Marketplace.DataModels.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Marketplace.DataModels.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SellerProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 8, 27, 14, 45, 28, 988, DateTimeKind.Utc).AddTicks(5746),
                            Description = "Chaussures trail pour terrains techniques et boueux.",
                            Name = "Chaussures de Trail Salomon Speedcross 5",
                            Price = 129.90m,
                            Quantity = 50,
                            SellerProfileId = 1,
                            Status = "active",
                            UpdatedAt = new DateTime(2025, 8, 27, 14, 45, 28, 988, DateTimeKind.Utc).AddTicks(6234)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 8, 27, 14, 45, 28, 988, DateTimeKind.Utc).AddTicks(6665),
                            Description = "Chaussures rapides pour triathlons et transitions rapides.",
                            Name = "Chaussures de Triathlon Asics Noosa Tri 15",
                            Price = 139.00m,
                            Quantity = 40,
                            SellerProfileId = 1,
                            Status = "active",
                            UpdatedAt = new DateTime(2025, 8, 27, 14, 45, 28, 988, DateTimeKind.Utc).AddTicks(6666)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 8, 27, 14, 45, 28, 988, DateTimeKind.Utc).AddTicks(6670),
                            Description = "Sac léger pour trail avec réservoir 1.5L.",
                            Name = "Sac d’hydratation Camelbak Ultra Pro Vest 7L",
                            Price = 119.99m,
                            Quantity = 25,
                            SellerProfileId = 2,
                            Status = "active",
                            UpdatedAt = new DateTime(2025, 8, 27, 14, 45, 28, 988, DateTimeKind.Utc).AddTicks(6671)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 8, 27, 14, 45, 28, 988, DateTimeKind.Utc).AddTicks(6673),
                            Description = "Ceinture légère et élastique pour dossard et gels.",
                            Name = "Ceinture porte-dossard triathlon Compressport",
                            Price = 19.90m,
                            Quantity = 100,
                            SellerProfileId = 3,
                            Status = "active",
                            UpdatedAt = new DateTime(2025, 8, 27, 14, 45, 28, 988, DateTimeKind.Utc).AddTicks(6674)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 8, 27, 14, 45, 28, 988, DateTimeKind.Utc).AddTicks(6677),
                            Description = "Néoprène pour natation en eau libre.",
                            Name = "Combinaison néoprène Orca Athlex Flow",
                            Price = 289.00m,
                            Quantity = 15,
                            SellerProfileId = 2,
                            Status = "active",
                            UpdatedAt = new DateTime(2025, 8, 27, 14, 45, 28, 988, DateTimeKind.Utc).AddTicks(6678)
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 8, 27, 14, 45, 28, 988, DateTimeKind.Utc).AddTicks(6681),
                            Description = "Vélo performance route pour triathlons et compétitions.",
                            Name = "Vélo de route carbone Canyon Aeroad CF SLX",
                            Price = 3999.00m,
                            Quantity = 5,
                            SellerProfileId = 4,
                            Status = "active",
                            UpdatedAt = new DateTime(2025, 8, 27, 14, 45, 28, 988, DateTimeKind.Utc).AddTicks(6682)
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2025, 8, 27, 14, 45, 28, 988, DateTimeKind.Utc).AddTicks(6685),
                            Description = "Montre GPS multisport avec suivi performance trail/triathlon.",
                            Name = "Montre GPS Garmin Forerunner 965",
                            Price = 599.00m,
                            Quantity = 20,
                            SellerProfileId = 1,
                            Status = "active",
                            UpdatedAt = new DateTime(2025, 8, 27, 14, 45, 28, 988, DateTimeKind.Utc).AddTicks(6685)
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2025, 8, 27, 14, 45, 28, 988, DateTimeKind.Utc).AddTicks(6689),
                            Description = "Bâtons pliables ultralégers pour longues distances.",
                            Name = "Bâtons de trail Black Diamond Distance Carbon Z",
                            Price = 159.00m,
                            Quantity = 30,
                            SellerProfileId = 3,
                            Status = "active",
                            UpdatedAt = new DateTime(2025, 8, 27, 14, 45, 28, 988, DateTimeKind.Utc).AddTicks(6689)
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2025, 8, 27, 14, 45, 28, 988, DateTimeKind.Utc).AddTicks(6692),
                            Description = "Pack de gels énergétiques pour endurance.",
                            Name = "Pack gels énergétiques GU Energy (24x40g)",
                            Price = 38.00m,
                            Quantity = 200,
                            SellerProfileId = 2,
                            Status = "active",
                            UpdatedAt = new DateTime(2025, 8, 27, 14, 45, 28, 988, DateTimeKind.Utc).AddTicks(6693)
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 8, 27, 14, 45, 28, 988, DateTimeKind.Utc).AddTicks(6696),
                            Description = "Frontale haute performance pour trail nocturne.",
                            Name = "Lampe frontale Petzl Nao RL 1500 lumens",
                            Price = 159.90m,
                            Quantity = 25,
                            SellerProfileId = 1,
                            Status = "active",
                            UpdatedAt = new DateTime(2025, 8, 27, 14, 45, 28, 988, DateTimeKind.Utc).AddTicks(6696)
                        });
                });

            modelBuilder.Entity("Marketplace.DataModels.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Marketplace.DataModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Marketplace.DataModels.Order", b =>
                {
                    b.HasOne("Marketplace.DataModels.User", "Buyer")
                        .WithMany("Orders")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");
                });

            modelBuilder.Entity("Marketplace.DataModels.Product", b =>
                {
                    b.HasOne("Marketplace.DataModels.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Marketplace.DataModels.ProductImage", b =>
                {
                    b.HasOne("Marketplace.DataModels.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Marketplace.DataModels.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Marketplace.DataModels.Product", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Marketplace.DataModels.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
